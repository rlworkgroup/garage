language: python

python: "3.5"

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

env:
  global:
    - DOCKER_COMPOSE_VERSION=1.23.2

jobs:
  include:
    - stage: "Build"
      if: (type = cron OR type = api) AND branch = master
      name: "Build and cache docker container"
      before_script: skip
      install: skip
      script:
        - tag="rlworkgroup/garage-ci:${TRAVIS_BUILD_NUMBER}"
        - make build-ci TAG="${tag}"
        - make ci-deploy-docker TAG="${tag}"
    - stage: test
    # pre-commit checks only run for pull requests
      if: type = pull_request
      name: "Pre-commit checks"
      env:
        - JOB_RUN_CMD="make ci-job-precommit"
    - name: "Normal tests"
      env:
        - JOB_RUN_CMD="make ci-job-normal"
        - DEPLOY_FROM_THIS_JOB="true"
    - name: "Large tests"
      env: JOB_RUN_CMD="make ci-job-large"
    - if: type != pull_request OR head_repo = "rlworkgroup/garage"
      name: "MuJoCo-based tests"
      env:
        - JOB_RUN_CMD="make ci-job-mujoco"
    - name: "Verify conda and pipenv installations"
      env: JOB_RUN_CMD="make ci-job-verify-envs"
    - if: type = cron
      name: "Nightly tests"
      env: JOB_RUN_CMD="make ci-job-nightly"
    # special deploy stage for tag builds ONLY
    - stage: deploy
      if: tag IS present
      name: "Deploy to PyPI"
      before_install: skip
      install: skip
      script:
        - echo "${TRAVIS_TAG}" > VERSION
      after_script: skip
      deploy:
        provider: pypi
        user: "__token__"
        password: "${PYPI_TOKEN}"
        skip_cleanup: true
        on:
          tags: true

before_install:
  # Reconfigure docker to be more efficient
  - |
    echo '{
      "experimental": true,
      "storage-driver": "overlay2",
      "max-concurrent-downloads": 50,
      "max-concurrent-uploads": 50
    }' | sudo tee /etc/docker/daemon.json
  - sudo service docker restart
  # Reinstall docker compose with the specified version. For more information, see:
  # https://docs.travis-ci.com/user/docker/#using-docker-compose
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin

install:
  # Pull cached docker image
  - docker pull rlworkgroup/garage-ci:latest
  - tag="rlworkgroup/garage-ci:${TRAVIS_BUILD_NUMBER}"
  - make build-ci TAG="${tag}"

before_script:
  - ci_env="$(bash <(curl -s https://codecov.io/env))"

script:
  - make run-ci RUN_CMD="${JOB_RUN_CMD}" RUN_ARGS="${ci_env}" TAG="${tag}"

deploy:
  provider: script
  script: make ci-deploy-docker TAG="${tag}"
  on:
    branch: master
    condition: $DEPLOY_FROM_THIS_JOB = true

git:
  depth: false

branches:
  only:
  - master
  - /release-.*/
  - /^v([1-9][0-9]*!)?(0|[1-9][0-9]*)(\.([0-9]*))*((a|b|rc)(0|[1-9][0-9]*))?(\.post(0|[1-9][0-9]*))?(\.dev(0|[1-9][0-9]*))?$/  # regex for release tags

notifications:
  email: false
