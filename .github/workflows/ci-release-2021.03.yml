name: Garage CI Release-2021.03

env:
  GARAGE_GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  PR_COMMIT_RANGE: origin/${{ github.base_ref }}...origin/${{ github.head_ref }}
  DOCKER_TAG: garage-ci-${{ github.run_id }}
  OWNER: "rlworkgroup"
  DOCKER_CACHE_REPO: "garage-ci"
  MJKEY: ${{ secrets.MJKEY }}
  CI_USER: rlworkgroupbot

on:
  push:
    tags:
      - 'v2021.03.[0-9]+'
      - 'v2021.03.[0-9]+rc[0-9]'
    branches:
      - 'release-2021.03'
  pull_request:
    branches:
      - 'release-2021.03'

jobs:
  build_docker_container:
    name: Build Docker Container
    runs-on: ubuntu-latest

    steps:
      - name: Docker info
        run: docker version
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Login to GitHub Package Registry
        run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
      - name: Build Docker container
        run: |
          DOCKER_BUILDKIT=1 docker build . \
            -f docker/Dockerfile \
            --target garage-dev \
            -t "${DOCKER_TAG}" \
            --build-arg GARAGE_GH_TOKEN \
            --cache-from="rlworkgroup/garage"
      - name: Push to cache (GitHub Package Registry)
        run: |
          docker tag "${DOCKER_TAG}" "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
          docker push "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"


  check_pre_commit:
    name: Check pre-commit
    runs-on: ubuntu-latest
    needs: build_docker_container

    steps:
    - name: Login to GitHub Package Registry
      if: github.event_name == 'pull_request'
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      if: github.event_name == 'pull_request'
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      if: github.event_name == 'pull_request'
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: Check pre-commit
      if: github.event_name == 'pull_request'
      run: |
        docker run \
          -e PR_COMMIT_RANGE \
          -e MJKEY \
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" scripts/ci/check_precommit.sh


  doctest:
    name: Run Doctest
    runs-on: ubuntu-latest
    needs: check_pre_commit

    steps:
    - name: Login to GitHub Package Registry
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: Doctest
      run: |
        docker run \
          -e MJKEY \
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" \
          /bin/bash -c \
          'pushd docs && make doctest clean && popd'


  normal_test:
    name: Normal Tests
    runs-on: ubuntu-latest
    needs: check_pre_commit

    steps:
    - name: Login to GitHub Package Registry
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: Normal tests
      run: |
        ci_env="$(bash <(curl -s https://codecov.io/env))" &&
        docker run \
          -e GITHUB_ACTIONS `# used by codecov` \
          -e CODECOV_TOKEN \
          $ci_env\
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" \
          /bin/bash -c \
          '[ ! -f ${MJKEY_PATH} ] || mv ${MJKEY_PATH} ${MJKEY_PATH}.bak &&
          pytest --cov=garage --cov-report=xml --reruns 1 -m \
              "not nightly and not huge and not flaky and not large and not mujoco and not mujoco_long" --durations=20 &&
          for i in {1..5}; do
              bash <(curl -s https://codecov.io/bash --retry 5) -Z && break
              if [ $i == 5 ]; then
                  exit 1
              else
                  echo "Retry ${i}..."
                  sleep 30
              fi
          done'


  large_test:
    name: Large Tests
    runs-on: ubuntu-latest
    needs: check_pre_commit

    steps:
    - name: Login to GitHub Package Registry
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: Large tests
      run: |
        ci_env="$(bash <(curl -s https://codecov.io/env))" &&
        docker run \
          -e GITHUB_ACTIONS \
          -e CODECOV_TOKEN \
          $ci_env\
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" \
          /bin/bash -c \
          '[ ! -f ${MJKEY_PATH} ] || mv ${MJKEY_PATH} ${MJKEY_PATH}.bak &&
          pytest --cov=garage --cov-report=xml --reruns 1 -m "large and not flaky" --durations=20 &&
          for i in {1..5}; do
              bash <(curl -s https://codecov.io/bash --retry 5) -Z && break
              if [ $i == 5 ]; then
                  exit 1
              else
                  echo "Retry ${i}..."
                  sleep 30
              fi
          done'


  mujoco_test:
    name: MuJoCo-Based Tests
    runs-on: ubuntu-latest
    needs: check_pre_commit

    steps:
    - name: Login to GitHub Package Registry
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: MuJoCo tests
      run: |
        ci_env="$(bash <(curl -s https://codecov.io/env))" &&
        docker run \
          -e MJKEY \
          -e GITHUB_ACTIONS \
          -e CODECOV_TOKEN \
          $ci_env\
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" \
          /bin/bash -c \
          'pytest --cov=garage --cov-report=xml --reruns 1 -m "mujoco and not flaky" --durations=20 &&
          for i in {1..5}; do
              bash <(curl -s https://codecov.io/bash --retry 5) -Z && break
              if [ $i == 5 ]; then
                  exit 1
              else
                  echo "Retry ${i}..."
                  sleep 30
              fi
          done'


  mujoco_test_long:
    name: Large MuJoCo-Based Tests
    runs-on: ubuntu-latest
    needs: check_pre_commit

    steps:
    - name: Login to GitHub Package Registry
      run: echo ${{ secrets.CI_REGISTRY_TOKEN }} | docker login docker.pkg.github.com -u ${CI_USER} --password-stdin
    - name: Pull from cache (GitHub Package Registry)
      run: docker pull "docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG}"
    - name: Tag docker image
      run: docker tag docker.pkg.github.com/${OWNER}/${DOCKER_CACHE_REPO}/${DOCKER_TAG} ${DOCKER_TAG}
    - name: Large MuJoCo tests
      run: |
        ci_env="$(bash <(curl -s https://codecov.io/env))" &&
        docker run \
          -e MJKEY \
          -e GITHUB_ACTIONS \
          -e CODECOV_TOKEN \
          $ci_env\
          --memory 6500m \
          --memory-swap 6500m \
          "${DOCKER_TAG}" \
          /bin/bash -c \
          'pytest --cov=garage --cov-report=xml --reruns 1 -m "mujoco_long and not flaky" --durations=20 &&
          for i in {1..5}; do
              bash <(curl -s https://codecov.io/bash --retry 5) -Z && break
              if [ $i == 5 ]; then
                  exit 1
              else
                  echo "Retry ${i}..."
                  sleep 30
              fi
          done'


  deploy_to_pypi:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: [normal_test, large_test, mujoco_test, mujoco_test_long]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.6
      - name: Update Version
        run: echo ${GITHUB_REF##*/} > VERSION
      - name: Update setuptools
        run: pip install --upgrade setuptools
      - name: Setup Distribution
        run: >-
          python setup.py sdist
      - name: Deploy to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}


  delete_docker_container:
    name: Delete Docker Container
    runs-on: ubuntu-latest
    needs: [check_pre_commit, normal_test, large_test, mujoco_test, mujoco_test_long]
    if: always()

    steps:
      - uses: actions/delete-package-versions@v1
        with:
          owner: ${{ env.OWNER }}
          repo: ${{ env.DOCKER_CACHE_REPO }}
          package-name: ${{ env.DOCKER_TAG }}
          token: ${{ secrets.CI_REGISTRY_TOKEN }}
