# NOTICE: To keep consistency across this docker file, scripts/setup_linux.sh
# and scripts/setup_osx.sh, if there's any changes applied to this file,
# specially regarding the installation of dependencies, apply those same
# changes to the mentioned files.
FROM ubuntu:16.04

# http://bugs.python.org/issue19846
# > At the moment, setting "LANG=C" on a Linux system *fundamentally breaks Python 3*, and that's not OK.
ENV LANG C.UTF-8

# apt dependencies
RUN \
  apt-get -y -q update && \
  # Prevents debconf from prompting for user input
  # See https://github.com/phusion/baseimage-docker/issues/58
  DEBIAN_FRONTEND=noninteractive apt-get install -y \
    # Dockerfile deps
    wget \
    bzip2 \
    unzip \
    git \
    curl \
    # For building glfw
    cmake \
    xorg-dev \
    # Dummy X server
    xvfb \
    libosmesa6-dev \
    pulseaudio \
    # mujoco_py
    # See https://github.com/openai/mujoco-py/blob/master/Dockerfile
    # 16.04 repo is too old, install glfw from source instead
    # libglfw3 \
    libglew-dev \
    patchelf \
    # OpenAI gym
    # See https://github.com/openai/gym/blob/master/Dockerfile
    libpq-dev \
    ffmpeg \
    libjpeg-dev \
    swig \
    libsdl2-dev \
    # OpenAI baselines
    libopenmpi-dev \
    openmpi-bin && \
  apt-get clean && \
  rm -rf /var/lib/apt/lists/*

# Build GLFW because the Ubuntu 16.04 version is too old
# See https://github.com/glfw/glfw/issues/1004
RUN apt-get purge -y -v libglfw*
RUN git clone https://github.com/glfw/glfw.git && \
  cd glfw && \
  git checkout 0be4f3f75aebd9d24583ee86590a38e741db0904 && \
  mkdir glfw-build && \
  cd glfw-build && \
  cmake -DBUILD_SHARED_LIBS=ON -DGLFW_BUILD_EXAMPLES=OFF -DGLFW_BUILD_TESTS=OFF -DGLFW_BUILD_DOCS=OFF .. && \
  make -j"$(nproc)" && \
  make install && \
  cd ../../ && \
  rm -rf glfw

# MuJoCo
RUN mkdir /root/.mujoco && \
  wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco.zip && \
  unzip mujoco.zip -d $HOME/.mujoco && \
  rm mujoco.zip
ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/.mujoco/mjpro150/bin

# conda
RUN wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh && \
  bash miniconda.sh -b -p /opt/conda && \
  rm miniconda.sh && \
  ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh
ENV PATH=$PATH:/opt/conda/bin
RUN conda update -q -y conda

# conda environment
# Copy over just environment.yml first, so the Docker cache doesn't expire
# until it changes
COPY environment.yml /root/code/garage/environment.yml
RUN conda env create -f /root/code/garage/environment.yml && \
  rm -rf /opt/conda/pkgs/*

# Extras
# prevent pip from complaining about available upgrades
RUN ["/bin/bash", "-c", "source activate garage && pip install --upgrade pip"]
# Fix Box2D install
# See https://github.com/openai/gym/issues/100
# See https://github.com/pybox2d/pybox2d/issues/82
RUN ["/bin/bash", "-c", "source activate garage && pip uninstall -y Box2D Box2D-kengz box2d-py && pip install Box2D"]

# Trigger Cython build of mujoco_py bindings
# We need a MuJoCo key to import mujoco_py, but MAKE SURE TO DELETE IT AFTER SO
# THAT WE DON'T PUBLISH THE KEY
ARG MJKEY
RUN echo "${MJKEY}" > /root/.mujoco/mjkey.txt
RUN ["/bin/bash", "-c", "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/root/.mujoco/mjpro150/bin && source activate garage && python -c 'import mujoco_py'"]
RUN rm /root/.mujoco/mjkey.txt

# Setup repo
WORKDIR /root/code/garage
# Pre-build pre-commit env
COPY .pre-commit-config.yaml /root/code/garage
RUN ["/bin/bash", "-c", "source activate garage && git init && pre-commit"]

# Pull CodeClimate reporter
RUN curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /root/code/garage/cc-test-reporter && \
  chmod +x /root/code/garage/cc-test-reporter

# Add code stub last
COPY . /root/code/garage
ENV PYTHONPATH=$PYTHONPATH:/root/code/garage

# Ready, set, go.
ENTRYPOINT ["docker/docker-entrypoint.sh"]
